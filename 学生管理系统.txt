#include<stdio.h> 
#include<string.h>
#include<unistd.h>
#include<stdlib.h>
#include<windows.h>
#include<conio.h>
typedef struct student{
	int num;
	char name[200];
	char profession[20];
	int age;
	char sex[10];
	int score_math;
	int score_english;
	int score_PE;
	int score_C;
	struct student*next;
}student; 
typedef struct users
{
	char account[20];
	char password[20];
}users;
void menu1();
void regist();
void login(); 
void menu2();
//目录1 
void menu1()
{
	system("cls");
	printf("\n\n\n");
	printf("\t\t\t**========================学生管理系统==========================**\n");
	printf("\t\t\t**==============================================================**\n");
    printf("\t\t\t**========================注册--输入1===========================**\n");
    printf("\t\t\t**========================登录--输入2===========================**\n");
    printf("\t\t\t**========================退出--输入0===========================**\n");
    printf("\t\t\t**==============================================================**\n");
    printf("\t\t\t**请选择:");
    int n;
	scanf("%d",&n);
	switch(n)
	{
		case 1:
			regist();
            break;
        case 2:
            login();
			break;
		case 0:
			printf("\t\t\t正在退出------------\n");
			sleep(2);
			exit(0);
		default:
			printf("您输入的数字有误，请重新输入！"); 
			getch();
			menu1();
	} 
}
//登陆判断 
int pd(users a)
{
	FILE *fp;
	users b;
	int flag=2;
	fp=fopen("users.txt", "rt");
	if (fp==NULL)
	{
		printf("\t输入无效，按任意键返回注册！\n");
		getch();
		exit(1);
	}
	while (fscanf(fp,"%s",b.account)!=EOF)
	{
		if(strcmp(a.account,b.account)==0)
		{
			flag=0;
			break;
		}
		else if(strcmp(a.account, b.account)!=0)
		{
			flag=1;
			continue;
		}
	}
	if (flag==0)
	{
		return 0;
	}
	else if (flag==1)
	{
		return 1;
	}
	else if (flag==2)
	{
		return 1;
	}
}
//注册 
void regist()
{ 
	system("cls");
	printf("\n\n\n");
	printf("\t\t\t**==========================注册============================**\n");
	users a;
	FILE  *fp;
	fp=fopen("users.txt", "a+");
	if (fp==NULL)
	{
		printf("打开失败,按任意键退出！\n");
		exit(1);
	}
	printf("\t\t\t请输入账号：");
	getchar();
	gets(a.account);
	printf("\n");
	if (pd(a) == 0)
	{
		printf("\t\t\t此账号已存在！请重新注册！");
		getch();
		menu1();
	}
	else if (pd(a) == 1)
	{
		printf("\t\t\t请输入密码：");
		gets(a.password);
		fputs(a.account,fp);
		fputs(" ",fp);
		fputs(a.password,fp);
		fputs("\n",fp);
		fclose(fp);
		printf("\t\t\t*****注册成功，按任意键返回*****");
		getch();
		menu1();
	}
}
//登录 
void login()
{
	system("cls");
	printf("\n\n\n");
	printf("\t\t\t**==========================登录============================**\n");
	users a;
	FILE *fp;
	int i;
	int flag=0;
	char ch[50],sh[50];
	fp=fopen("users.txt","rt");
	printf("\t\t\t请输入账号：");
	getchar();
	gets(ch);
	printf("\t\t\t请输入密码：");
	gets(sh);
	while(fscanf(fp,"%s %s",a.account,a.password)!=EOF)
	{	
		if(strcmp(ch,a.account)==0&&strcmp(sh,a.password)==0 )
		{	
				flag=1;
				break;
        }
			else if(strcmp(ch,a.account)==0&&strcmp(sh,a.password)!=0)
			{	
				flag=0;
				break;
			}
		else if(strcmp(ch,a.account)!=0)
		{
            flag=2;	
		   	continue;
		}
	}
		if(flag==1)
		{
			printf("\t\t\t登录成功！"); 
			getch(); 
			menu2();
		}
		else if(flag==0)
		{
			printf("\t\t\t密码错误！");
			getch();
			menu1();
		}
		else if(flag==2)
		{
			printf("\t\t\t此账号不存在！");
			getch();
			menu1();
		}
}
//读取文件内容 
student *read()
{
	student *head, *q, *p;
	FILE *fp;
	if ((fp = fopen("student.txt", "rt"))==NULL)
	{
		printf("\t打开文件有错，按任意键退出！");
		getch();
		exit(1);
	}
	head = (student *)malloc(sizeof(student));
	head->next = NULL;
	q = head;
	while (!feof(fp)) {
		p = (student *)malloc(sizeof(student));
		fscanf(fp,"%d %s %d %s %s %d %d %d %d\n",&p->num,p->name,&p->age,p->sex,p->profession,&p->score_math,&p->score_english,&p->score_PE,&p->score_C);
		q->next = p;
		q = p;
	}
	q->next = NULL;
	fclose(fp);
	return head;
}
//保存内容至文件 
student*save(student *head)
{
	FILE *fp;
	struct student*p;
	if ((fp = fopen("student.txt", "a+")) == NULL)
	{
		printf("\t写文件出错，按任意键退出！");
		getch();
		exit(1);
	}
	for (p = head->next; p != NULL; p = p->next)
	{
		fprintf(fp,"%d %s %d %s %s %d %d %d %d\n",p->num,p->name,p->age,p->sex,p->profession,p->score_math,p->score_english,p->score_PE,p->score_C);
	}
	fclose(fp);
	printf("\n\t\t\t文件已经保存成功！");
	getch();
	return head;
}
//输出 
student *print(student *head)
{
	student *p = head->next;
	while (p)
	{
		printf("学号：%d\t",p->num);
		printf("姓名：%s\t",p->name);
		printf("年龄：%d\t",p->age);
		printf("性别：%s\t",p->sex);
		printf("专业：%s\t",p->profession);
		printf("高数成绩：%d\t",p->score_math);
		printf("英语成绩：%d\t",p->score_english);
		printf("体育成绩：%d\t",p->score_PE);
		printf("C语言成绩：%d\n",p->score_C); 
		p=p->next;
	}
	printf("\n          按任意键返回！");
	getch();
	return head;
}
//增加学生信息 
student *add()
{
	struct student *p;
	struct student *q,*s;
	int x,i = 0;
	system("cls");
	p=(struct student*)malloc(sizeof(struct student));
	p->next=NULL;
	q=p;
	printf("请输入需要添加的学生人数: ");
	scanf("%d", &x);
	do
	{
		s = (struct student*)malloc(sizeof(struct student));
		printf("\t\t***********请输入学生信息***********\n");
		printf("第%d个学生信息:\n", i + 1);
		printf("学号:");
		scanf("%d",&s->num);
		printf("姓名:");
		scanf("%s",s->name);
		printf("年龄:");
		scanf("%d",&s->age);
		printf("性别:");
		scanf("%s",s->sex);
		printf("专业:");
		scanf("%s",&s->profession);
		printf("高数成绩:");
		scanf("%d",&s->score_math);
		printf("英语成绩:");
		scanf("%d",&s->score_english);
		printf("体育成绩:");
		scanf("%d",&s->score_PE);
		printf("C语言成绩:");
		scanf("%d",&s->score_C);
		q->next=s;
		q=s;
		s->next=NULL;
		i++;
	} while (i<x);
	printf("\n\t\t添加成功-----");
    getch();
	return p;
}
//依据学号或姓名寻找学生 
student*search()
{
    system("cls");
    int n,m;
	char name[20]; 
    printf("\n\n\n");
    printf("\t\t\t**=========================请输入查找方式============================**\n");
    printf("\t\t\t**=========================1.按学号查找==============================**\n");
	printf("\t\t\t**=========================2.按姓名查找==============================**\n");
	printf("\t\t\t\t请输入:");
	scanf("%d",&n);
	if(n==1)
	{
		printf("\t\t\t\t请输入您要查找的学号："); 
		scanf("%d",&m);
		struct student*head,*q,*p;
    	FILE *fp;
    	if ((fp=fopen("student.txt", "rt"))==NULL)
    	{
    		printf("\t打开文件有错，按任意键退出！");
	    	getch();
    		exit(1);
    	}
	    head=(student*)malloc(sizeof(student));
    	head->next=NULL;
    	q=head;
    	while (!feof(fp))
    	{
     		p=(student*)malloc(sizeof(student));
    		fscanf(fp,"%d %s %d %s %s %d %d %d %d\n",&p->num,p->name,&p->age,p->sex,p->profession,&p->score_math,&p->score_english,&p->score_PE,&p->score_C);
    		q->next=p;
    		q=p;
    	}
    	q->next = NULL;
    	fclose(fp);
    	p=head->next;
    	while (p->num!=m&&p)
    	{
    		printf("1");
    		p=p->next;
    	}
    	if (p!=NULL)
    	{
	    	printf("\n\n                              --学生信息--                                            \n\n");
	    	printf("------------------------------------------------------------------------------------------------------\n");
		    printf("学号：%d\t",p->num);
    		printf("姓名：%s\t",p->name);
	    	printf("年龄：%d\t",p->age);
    		printf("性别：%s\t",p->sex);
	    	printf("专业：%s\t",p->profession);
    		printf("高数成绩：%d\t",p->score_math);
    		printf("英语成绩：%d\t",p->score_english);
    		printf("体育成绩：%d\t",p->score_PE);
    		printf("C语言成绩：%d\n",p->score_C); 
        }
    	else
      	{
	      	printf("\n\t未查询到该学生的信息，请检查是否输入正确。");
     	}
    	printf("\n\t按任意键返回！");
    	getch();
    	return head;
	}
	else if(n==2)
	{
		printf("\t\t\t\t请输入您要查找的姓名："); 
		scanf("%s",name);
		struct student*head,*q,*p;
    	FILE *fp;
    	if ((fp=fopen("student.txt", "rt"))==NULL)
    	{
    		printf("\t打开文件有错，按任意键退出！");
	    	getch();
    		exit(1);
    	}
	    head=(student*)malloc(sizeof(student));
    	head->next=NULL;
    	q=head;
    	while (!feof(fp))
    	{
     		p=(student*)malloc(sizeof(student));
    		fscanf(fp,"%d %s %d %s %s %d %d %d %d\n",&p->num,p->name,&p->age,p->sex,p->profession,&p->score_math,&p->score_english,&p->score_PE,&p->score_C);
    		q->next=p;
    		q=p;
    	}
    	q->next = NULL;
    	fclose(fp);
    	p=head->next;
    	while (strcmp(p->name,name)!=0&&p)
    	{
    		p=p->next;
    	}
    	if (p!=NULL)
    	{
	    	printf("\n\n                              --学生信息--                                            \n\n");
	    	printf("--------------------------------------------------------------------------------------------------\n");
		    printf("学号：%d\t",p->num);
    		printf("姓名：%s\t",p->name);
	    	printf("年龄：%d\t",p->age);
    		printf("性别：%s\t",p->sex);
	    	printf("专业：%s\t",p->profession);
    		printf("高数成绩：%d\t",p->score_math);
    		printf("英语成绩：%d\t",p->score_english);
    		printf("体育成绩：%d\t",p->score_PE);
    		printf("C语言成绩：%d\n",p->score_C); 
        }
    	else
      	{
	      	printf("\n\t未查询到该学生的信息，请检查是否输入正确。");
	      	getch();
     	}
    	return head;
    }
    else
    {
        printf("您的输入错误！\n");
    }
}
//从刚才增加的内容中删除需要删除的内容 
student *delet(student *head)
{
	student*q;
	student*p = head;
	q = head->next;
	char name[20];
	printf("\n请输入要删除的学生姓名：");
	scanf("%s",name);
	while (q)
	{
		if (strcmp(q->name,name) == 0)
		{
			p->next = q->next;
			free(q);
			q = p->next;
		}
		else
		{
			p = p->next;
			q = q->next;
		}
	}
	printf("\n删除完成!!");
	getch();
	return head;
}
//从刚才增加的内容中修改需要改变的内容 
student *change(student *head)
{
	system("cls");
	student *p = head;
	int choice;
	char name[20];
	printf("\n\t请输入要修改的学生姓名：\n");
	scanf("%s",name);
	while (p&&strcmp(p->name,name)!= 0)
	{
		p=p->next;
	}
	if (p)
	{
		printf("\n\n");
		printf("\t┏━━━━━━━━请选择修改的选项━━━━━━━━┓\n");
		printf("\t┃—————————1.学号————————————┃\n");
		printf("\t┃—————————2.姓名————————————┃\n");
		printf("\t┃—————————3.年龄————————————┃\n");
		printf("\t┃—————————4.性别————————————┃\n");
		printf("\t┃—————————5.专业————————————┃\n");
		printf("\t┃—————————6.英语成绩——————————┃\n");
		printf("\t┃—————————7.英语成绩——————————┃\n");
		printf("\t┃—————————8.体育成绩——————————┃\n");
		printf("\t┃—————————9.C语言成绩—-————————┃\n");		
		printf("\t┗━━━━━━━━━━━━━━━━━━━━━━━━┛\n");
		printf("\n请选则您要进行的修改项：");
		scanf("%d", &choice);
		switch (choice)
		{
		case 1:printf("\n                   请输入修改后的学号:");
			scanf("%d",&p->num); break;
		case 2:printf("\n                   请输入修改后的姓名:");
			scanf("%s",p->name); break;
		case 3:printf("\n                   请输入修改后的年龄:");
			scanf("%d",&p->age); break;
		case 4:printf("\n                   请输入修改后的性别:");
			scanf("%s",p->sex); break;
		case 5:printf("\n                   请输入修改后的专业:");
			scanf("%s", p->profession); break;
		case 6:printf("\n                   请输入修改后的高数成绩:");
			scanf("%d", &p->score_math); break;
		case 7:printf("\n                   请输入修改后的英语成绩:");
			scanf("%d", &p->score_english); break;
		case 8:printf("\n                   请输入修改后的体育成绩:");
			scanf("%d", &p->score_PE); break;	
		case 9:printf("\n                   请输入修改后的C语言成绩:");
			scanf("%d", &p->score_C); break;
		}
		printf("\n\n\t\t\t修改成功");
	}
	printf("\n                        按任意键返回！");
	getch();
	return head;
}
//目录2 
void menu2()
{
	struct student*head=NULL;
	int n;
	do{
		system("pause");
    	system("cls");
    	printf("\n\n\n");
    	printf("\t\t\t**========================学生管理系统==========================**\n");
    	printf("\t\t\t**=======================1.显示已存学生信息=====================**\n");
    	printf("\t\t\t**=======================2.添加学生信息=========================**\n");
    	printf("\t\t\t**=======================3.查找学生信息=========================**\n");
    	printf("\t\t\t**=======================4.删除学生信息=========================**\n");
	    printf("\t\t\t**=======================5.修改学生信息=========================**\n");
	    printf("\t\t\t**=======================6.显示学生信息=========================**\n");
	    printf("\t\t\t**=======================7.保存学生信息=========================**\n");
    	printf("\t\t\t**=======================0.退出=================================**\n");
    	printf("\t\t\t请输入你的选择："); 
    	scanf("%d",&n);
      	switch(n)
    	{
        	case 1:
         		head=read();
         		print(head);
         	 	break; 
         	case 2:
        		head=add();
        		break;
        	case 3:
        		search();
        		break;
        	case 4:
        		delet(head);
        		break;
        	case 5:	
        	    head=change(head);
        	    break;
        	case 6:
        		head=print(head);
        		break;
        	case 7:
        		save(head);
        		break;
        	case 0:
        		printf("\t\t\t正在退出---");
        }
	}while(1);
 } 
 int main()
{
	struct student*head=NULL;
	menu1();
}   